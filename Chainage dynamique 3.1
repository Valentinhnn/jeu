class Node:
    def __init__(self, value):
        self.value = value
        self.next = None

class Queue:
    def __init__(self):
        self.head = None
        self.tail = None

    def is_empty(self):
        """Vérifie si la file est vide."""
        return self.head is None

    def enqueue(self, value):
        """Ajoute un élément à la fin de la file."""
        new_node = Node(value)
        if self.tail is not None:
            self.tail.next = new_node
        self.tail = new_node
        if self.head is None:
            self.head = new_node

    def dequeue(self):
        """Supprime et retourne l'élément au début de la file."""
        if self.is_empty():
            raise ValueError("Queue is empty")
        removed_value = self.head.value
        self.head = self.head.next
        if self.head is None:
            self.tail = None
        return removed_value

    def peek(self):
        """Retourne l'élément au début de la file sans le supprimer."""
        if self.is_empty():
            raise ValueError("Queue is empty")
        return self.head.value
